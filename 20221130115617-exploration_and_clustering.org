:PROPERTIES:
:ID:       96769910-d0b7-4f7d-a240-1a91eb96d0fc
:END:
#+title: Exploration and clustering
#+date: [2022-11-30 Wed 11:56]
* Imports and path variables
** Imports

#+BEGIN_SRC python :session orgsession :async yes
  import pandas as pd
  from matplotlib import pyplot as plt
  import os
  import re
  import numpy as np
  from time import sleep
  from sklearn.cluster import AffinityPropagation as AF
  from sklearn.preprocessing import StandardScaler as SS
  from sklearn.cluster import KMeans
  from sklearn.decomposition import PCA
#+END_SRC

#+RESULTS:

** Path Variables
#+BEGIN_SRC python :session orgsession :async yes
  data_file_path = "/home/arvid/dev/Aristotle/DataFiles/DataFiles/2022-11-28_shrtCLT/"
  data_files = os.listdir(data_file_path)
  cleaned_file_dir = "/home/arvid/dev/Aristotle/CleanedDataFiles/2022-11-28_shrtCLT/"
  full_clean_files = cleaned_file_dir + "Full/"
  gen_bus_files = "/home/arvid/dev/Aristotle/GeneratorBusFiles/"
  bus_file = "/home/arvid/dev/Aristotle/ARISTO_BUSES.txt"
  cleaned_list_dir = os.listdir(cleaned_file_dir)
  generating_unit_file = "/home/arvid/dev/Aristotle/ARISTO_GENERATING_UNITS.txt"
  cleaned_generator_folder = cleaned_file_dir + "Generators/"
  generator_files = os.listdir(cleaned_generator_folder)

#+END_SRC

#+RESULTS:

* Clustering
** Utility functions:
*** Makes loading dataframes more convenient...
#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  def get_gen_df(number,folder=cleaned_generator_folder, file_list=generator_files, index_col="Time:"):
    file = generator_files[number]
    path = folder + file
    return pd.read_csv(path, index_col=index_col, skipinitialspace=True)
#+END_SRC

#+RESULTS:

** Test clustering with one DF:
:LOGBOOK:
CLOCK: [2022-12-02 Fri 13:56]
:END:
#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df = get_gen_df(0)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  dataset = df.values.T
  print(dataset.shape)
#+END_SRC

#+RESULTS:
: (39, 1002)

#+begin_src python :session orgsession :async yes :pandoc t -n 1
  clstr = AF().fit(dataset)
#+end_src

#+RESULTS:

#+begin_src python :session orgsession :async yes :pandoc t -n 1
  labels = clstr.labels_
  print(labels)
  print(df.columns)
#+end_src

#+RESULTS:
#+begin_example
  [1 1 1 1 0 0 0 0 0 0 0 0 1 3 1 1 0 0 1 1 0 1 1 1 1 1 2 0 3 3 3 3 3 3 2 2 1
   3 0]
  Index(['VA_AGGAN_G1', 'VA_AGGAN_G2', 'VA_ATOMSBERG_G1', 'VA_BLOCKET_G1',
         'VA_BLOCKET_G2', 'VA_DALBO_G1', 'VA_ERIKSHAMN_G1', 'VA_ERIKSHAMN_G2',
         'VA_HAMMARVATTNET_G1', 'VA_HALLAN_G1', 'VA_HALLAN_G2', 'VA_HALLAN_G3',
         'VA_HALLAN_G4', 'VA_HASTSJO_G1', 'VA_HASTSJO_G2', 'VA_JAURAS_G1',
         'VA_KARNAN_G1', 'VA_KARNAN_G2', 'VA_KARNAN_G3', 'VA_NJAGGO_G1',
         'VA_NORRSELE_G1', 'VA_NORRSELE_G2', 'VA_OLMAFALLET_G1',
         'VA_RUTHUVUD_G1', 'VA_RUTHUVUD_G2', 'VA_RUTHUVUD_G3',
         'VA_STENFORSEN_G1', 'VA_STORFORS_G1', 'VA_STORTRASK_G1', 'VA_STORAN_G1',
         'VA_STUPET_G1', 'VA_STUPET_G2', 'VA_STUPET_G3', 'VA_STUPET_G4',
         'VA_SYDBACK_G1', 'VA_SYDBACK_G2', 'VA_TROLLFALLEN_G1',
         'VA_VATTENDRAGET_G1', 'VA_YTTERFORSEN_G1'],
        dtype='object')
#+end_example

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  corr = df.corr()
  f = plt.figure(figsize=(20, 20))
  plt.matshow(corr, fignum=f.number)
  plt.xticks(range(df.select_dtypes(['number']).shape[1]), df.select_dtypes(['number']).columns, fontsize=14, rotation=45)
  plt.yticks(range(df.select_dtypes(['number']).shape[1]), df.select_dtypes(['number']).columns, fontsize=14)
  cb = plt.colorbar()
  cb.ax.tick_params(labelsize=14)
  plt.title('Correlation Matrix', fontsize=16);
#+END_SRC

#+RESULTS:
[[file:./.ob-jupyter/6bc1f0e7d58757434a2a24f45bc15112f2394c51.png]]

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 0:5].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/1458790a47a48ed1012a07360d201e4bf964707b.png]]
:END:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 5:10].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/e5fc5ebf5862580ab76787711be1b9f20df5138f.png]]
:END:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 10:15].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/9eedb860f2943fb483621aa8ac42d5d525be3ff5.png]]
:END:

: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/9eedb860f2943fb483621aa8ac42d5d525be3ff5.png]]
:END:
#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/e5fc5ebf5862580ab76787711be1b9f20df5138f.png]]
:END:


#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 20:25].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/61004857a093c9e55ef0c337d404349112b5fd25.png]]
:END:

: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/61004857a093c9e55ef0c337d404349112b5fd25.png]]
:END:
#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/e5fc5ebf5862580ab76787711be1b9f20df5138f.png]]
:END:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 30:35].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>], dtype=object)
[[file:./.ob-jupyter/c78664c14177725c1d46ea8d3af80692720bbe7b.png]]
:END:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  df.iloc[:, 35:].plot(subplots=True)
#+END_SRC

#+RESULTS:
:RESULTS:
: array([<AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>,
:        <AxesSubplot: xlabel='Time:'>, <AxesSubplot: xlabel='Time:'>],
:       dtype=object)
[[file:./.ob-jupyter/f3458756cc748e4e9e3771708d35974a8e2e3956.png]]
:END:

** Test with unstable case:

#+BEGIN_SRC python :session orgsession :async yes :pandoc t -n 1
  stab_path = "/home/arvid/dev/Aristotle/CleanedDataFiles/2022-11-28_shrtCLT/stability_data.csv"
  stability_df = pd.read_csv(stab_path,index_col=0)
#  unstab = stability_df[stability_df.iloc[1,:]==0]
#+END_SRC

#+RESULTS:

#+begin_src python :session orgsession :async yes :pandoc t -n 1
  df = get_gen_df(8)
  print(stability_df.iloc[:,8])
#+end_src

#+RESULTS:
: 0   -0.146852
: 1    0.000000
: Name: Bus_AT131_A130_STORF_CLT:10_FT:157__Load:_1.05.csv, dtype: float64
